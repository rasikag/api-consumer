{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/datepicker/datepicker.component.html","webpack:///./src/app/components/datepicker/datepicker.component.ts","webpack:///./src/app/components/usertable/usertable.component.css","webpack:///./src/app/components/usertable/usertable.component.html","webpack:///./src/app/components/usertable/usertable.component.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,iCAAiC,4BAA4B,KAAK,C;;;;;;;;;;;ACAlE,kD;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACY;AAQtD;IAKE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,UAAK,GAAG,cAAc,CAAC;IAEwB,CAAC;IAEhD,oDAAoD;IACpD,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAGC;QAFA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aACzB,SAAS,CAAC,UAAC,KAAK,IAAO,KAAI,CAAC,KAAK,GAAG,KAAK,CAAE,CAAC,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAfU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAMiC,kEAAW;OALjC,YAAY,CAgBxB;IAAD,mBAAC;CAAA;AAhBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACe;AACuB;AACW;AACb;AACC;AAC3B;AAEI;AAER;AACoC;AAC7B;AAC0B;AAwBhF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,+FAAmB;gBACnB,6FAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,4FAAuB;gBACvB,gEAAc;gBACd,qEAAmB;gBACnB,oEAAkB;gBAClB,qEAAmB;gBACnB,mEAAiB;gBACjB,gEAAc;gBACd,2FAAwB;gBACxB,oEAAS,CAAC,OAAO,EAAE;aACpB;YACD,SAAS,EAAE,CAAC,kEAAW,EAAE,qEAAmB,CAAE;YAC9C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtCtB,oQ;;;;;;;;;;;;;;;;;;;;;ACAwC;AAMxC;IAAA;IAEA,CAAC;IAFY,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;SAE3B,CAAC;OACW,mBAAmB,CAE/B;IAAD,0BAAC;CAAA;AAF+B;;;;;;;;;;;;ACNhC,yBAAyB,kBAAkB,KAAK,C;;;;;;;;;;;ACAhD,4QAA4Q,YAAY,wLAAwL,eAAe,sLAAsL,cAAc,wLAAwL,eAAe,wIAAwI,2BAA2B,gF;;;;;;;;;;;;;;;;;;;;;;;;;ACA39B;AAEQ;AAQ1D;IAME,4BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,qBAAgB,GAAa,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAEd,CAAC;IAEjD,qCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAKE;QAJA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aACzB,SAAS,CAAC,UAAC,KAAK;YACf,KAAI,CAAC,UAAU,GAAG,KAAK,CAAE;QAC1B,CAAC,CAAC,CAAC;IACN,CAAC;IAjBS,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAOiC,kEAAW;OANjC,kBAAkB,CAmB9B;IAAD,yBAAC;CAAA;AAnB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVY;AACoB;AAIZ;AAInD;IAKE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,YAAO,GAAG,uCAAuC,CAAC;QAClD,gBAAW,GAAG,4CAA4C,CAAC;IAEnB,CAAC;IAEzC,8BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,WAAW,CAAC;aAC3C,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACtB,CAAC;IAVU,WAAW;QADvB,gEAAU,EAAE;yCAMe,+DAAU;OALzB,WAAW,CAWvB;IAAD,kBAAC;CAAA;AAXuB;;;;;;;;;;;;;ACTxB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEvC;AAElB,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"mat-grid-tile {\\n    background: lightblue;\\n  }\"","module.exports = \"<app-usertable></app-usertable>\"","import { Component } from '@angular/core';\nimport { UserService } from './services/user.service';\nimport { User } from './models/user.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  users: User[];\n  title = 'api-consumer';\n\n  constructor(private userService: UserService) {}\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers(): void {\n   this.userService.getUsers()\n    .subscribe((users) => { this.users = users ; console.log (this.users); });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule, MatInputModule, MatGridListModule } from '@angular/material';\nimport { MatNativeDateModule, MatDatepickerModule } from '@angular/material';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { UserService } from './services/user.service';\nimport { UsertableComponent } from './components/usertable/usertable.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DatepickerComponent,\n    UsertableComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatTableModule,\n    MatProgressSpinnerModule,\n    NgbModule.forRoot()\n  ],\n  providers: [UserService, MatDatepickerModule ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-form-field>\\n    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #picker></mat-datepicker>\\n</mat-form-field>\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n})\nexport class DatepickerComponent {\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <th mat-header-cell *matHeaderCellDef> EMAIL </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> NAME </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"phone\\\">\\n      <th mat-header-cell *matHeaderCellDef> PHONE </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-progress-spinner></mat-progress-spinner>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { UserService } from '../../services/user.service';\nimport { User } from 'src/app/models/user.model';\n\n@Component({\n  selector: 'app-usertable',\n  templateUrl: './usertable.component.html',\n  styleUrls: ['./usertable.component.css']\n})\nexport class UsertableComponent implements OnInit {\n\n  users: User[];\n  dataSource;\n  displayedColumns: string[] = ['id', 'email', 'name', 'phone'];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers(): void {\n    this.userService.getUsers()\n     .subscribe((users) => {\n       this.dataSource = users ;\n      });\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { User } from '../models/user.model';\nimport { Observable } from 'rxjs';\nimport { catchError, delay } from 'rxjs/operators';\n\n\n@Injectable()\nexport class UserService {\n\n  baseURL = 'https://jsonplaceholder.typicode.com/';\n  getAllUsers = 'https://jsonplaceholder.typicode.com/users';\n\n  constructor(private http: HttpClient) { }\n\n  getUsers (): Observable<User[]> {\n    return this.http.get<User[]>(this.getAllUsers)\n      .pipe(delay(500));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}